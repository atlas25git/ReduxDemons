{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/cart-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","cartSlice","items","totalQuantity","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","Notification","specialClasses","error","success","cssClasses","init","App","showCart","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","window","alert","sendRequest","method","body","JSON","stringify","sendCartData","ReactDOM","render","document","getElementById"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,SAAW,2BAA2B,MAAQ,wBAAwB,UAAY,4BAA4B,QAAU,4B,mBCA5MD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,QAAU,+B,gBCAhGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,QAAU,gC,kBCAlHD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,4B,iBCA9DD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,oGCCvBC,EAAUC,YAAY,CACxBC,KAAM,KACNC,aAAc,CAACC,eAAe,EAAOC,aAAc,MACnDC,SAAU,CACNC,OADM,SACCC,GACHA,EAAMJ,eAAeI,EAAMJ,eAE/BK,iBAJM,SAIWD,EAAME,GACnBF,EAAMH,aAAe,CACjBM,OAAQD,EAAOE,QAAQD,OACvBE,MAAOH,EAAOE,QAAQC,MACtBC,QAASJ,EAAOE,QAAQE,aAM3BC,EAAYf,EAAQgB,QAClBhB,ICjBTiB,EAAYhB,YAAY,CAC1BC,KAAM,OACNC,aAAa,CACTe,MAAO,GACPC,cAAe,EACfC,SAAS,GAGbd,SAAU,CACNe,YADM,SACMb,EAAME,GACdF,EAAMW,cAAgBT,EAAOE,QAAQO,cACrCX,EAAMU,MAAQR,EAAOE,QAAQM,OAEjCI,cALM,SAKQd,EAAME,GAChB,IAAMa,EAAUb,EAAOE,QACjBY,EAAehB,EAAMU,MAAMO,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAMJ,EAAQI,MACnEnB,EAAMW,gBACNX,EAAMY,SAAU,EAEZI,GAUAA,EAAaI,WACbJ,EAAaK,WAAaL,EAAaK,WAAaN,EAAQO,OAV5DtB,EAAMU,MAAMa,KAAK,CACbJ,GAAIJ,EAAQI,GACZG,MAAOP,EAAQO,MACfF,SAAU,EACVC,WAAYN,EAAQO,MACpB5B,KAAMqB,EAAQV,SAQ1BmB,mBAzBM,SAyBaxB,EAAME,GAErB,IAAMiB,EAAKjB,EAAOE,QACZY,EAAehB,EAAMU,MAAMO,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOA,KAC1DnB,EAAMW,gBACNX,EAAMY,SAAU,EAEa,IAA1BI,EAAaI,SAEZpB,EAAMU,MAAQV,EAAMU,MAAMe,QAAO,SAAAP,GAAI,OAAIA,EAAKC,IAAMA,MAGpDH,EAAaI,WACbJ,EAAaK,WAAaL,EAAaK,WAAaL,EAAaM,WAQpEI,EAAcjB,EAAUD,QAEtBC,ICnDAkB,EAJDC,YAAe,CACzBC,QAAS,CAACC,GAAItC,EAAQqC,QAASE,KAAMtB,EAAUoB,W,gCCOpCG,EAVF,SAACC,GACZ,OACE,yBACEC,UAAS,UAAKC,IAAQC,KAAb,YAAqBH,EAAMC,UAAYD,EAAMC,UAAY,IADpE,SAGGD,EAAMI,Y,iCCqCEC,EAxCE,SAACL,GAChB,IAAMM,EAAWC,cACjB,EAA8CP,EAAMf,KAA5Cb,EAAR,EAAQA,MAAOe,EAAf,EAAeA,SAAUqB,EAAzB,EAAyBA,MAAOnB,EAAhC,EAAgCA,MAAOH,EAAvC,EAAuCA,GAgBvC,OACE,qBAAIe,UAAWC,IAAQjB,KAAvB,UACE,mCACE,6BAAKb,IACL,sBAAK6B,UAAWC,IAAQb,MAAxB,cACImB,EAAMC,QAAQ,GAAI,IACpB,uBAAMR,UAAWC,IAAQQ,UAAzB,eAAuCrB,EAAMoB,QAAQ,GAArD,kBAGJ,sBAAKR,UAAWC,IAAQS,QAAxB,UACE,sBAAKV,UAAWC,IAAQf,SAAxB,eACI,+BAAOA,OAEX,sBAAKc,UAAWC,IAAQ3B,QAAxB,UACE,wBAAQqC,QA5BU,WACxBN,EAASb,EAAYF,mBAAmBL,KA2BlC,eACA,wBAAQ0B,QAzBO,WACrBN,EAASb,EAAYZ,cACnB,CACEK,KACAd,QACAiB,YAoBE,yBCPKwB,EAzBF,SAACb,GAEZ,IAAMc,EAAYC,aAAY,SAAAhD,GAAK,OAAIA,EAAM+B,KAAKrB,SAElD,OACE,eAAC,EAAD,CAAMwB,UAAWC,IAAQJ,KAAzB,UACE,oDACA,6BACGgB,EAAUE,KAAK,SAAC/B,GAAD,OACZ,cAAC,EAAD,CAEAA,KAAM,CACJC,GAAID,EAAKC,GACTd,MAAOa,EAAKxB,KACZ0B,SAAUF,EAAKE,SACfqB,MAAOvB,EAAKG,WACZC,MAAOJ,EAAKI,QANTJ,EAAKC,a,wBCQP+B,EAlBI,SAACjB,GAClB,IAAMM,EAAWC,cAEXW,EAAeH,aAAY,SAAAhD,GAAK,OAAIA,EAAM+B,KAAKpB,iBAOrD,OACE,yBAAQuB,UAAWC,IAAQiB,OAAQP,QANX,WACxBN,EAAShC,EAAUR,WAKnB,UACE,2CACA,sBAAMmC,UAAWC,IAAQkB,MAAzB,SAAiCF,Q,iBCAxBG,EAfI,SAACrB,GAClB,OACE,yBAAQC,UAAWC,IAAQoB,OAA3B,UACE,2CACA,8BACE,6BACE,6BACE,cAAC,EAAD,cCEGC,EATA,SAACvB,GACd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,+BAAOA,EAAMI,e,gBC6BJoB,EA/BK,SAACxB,GACnB,IAAMM,EAAWC,cAETnC,EAAkC4B,EAAlC5B,MAAOiB,EAA2BW,EAA3BX,MAAOoC,EAAoBzB,EAApByB,YAAavC,EAAOc,EAAPd,GAYnC,OACE,oBAAIe,UAAWC,IAAQjB,KAAvB,SACE,eAAC,EAAD,WACE,mCACE,6BAAKb,IACL,sBAAK6B,UAAWC,IAAQb,MAAxB,cAAiCA,EAAMoB,QAAQ,SAEjD,4BAAIgB,IACJ,qBAAKxB,UAAWC,IAAQ3B,QAAxB,SACE,wBAAQqC,QAnBS,WACvBN,EAASb,EAAYZ,cACnB,CACAK,KACAd,QACAiB,YAcI,iC,iBC1BJqC,EAAiB,CACrB,CACExC,GAAI,KACJG,MAAO,EACPjB,MAAO,UACPqD,YAAa,sBAEf,CACEvC,GAAI,KACJG,MAAO,EACPjB,MAAO,UACPqD,YAAa,wBAuBFE,EAnBE,SAAC3B,GAChB,OACE,0BAASC,UAAWC,IAAQ0B,SAA5B,UACE,4DACA,6BACGF,EAAeV,KAAI,SAACY,GAAD,OAClB,cAAC,EAAD,CAEA1C,GAAI0C,EAAS1C,GACbd,MAAOwD,EAASxD,MAChBiB,MAAOuC,EAASvC,MAChBoC,YAAaG,EAASH,aAJjBG,EAAS1C,a,uCCHT2C,EApBM,SAAC7B,GACpB,IAAI8B,EAAiB,GAEA,UAAjB9B,EAAM9B,SACR4D,EAAiB5B,IAAQ6B,OAEN,YAAjB/B,EAAM9B,SACR4D,EAAiB5B,IAAQ8B,SAG3B,IAAMC,EAAU,UAAM/B,IAAQtC,aAAd,YAA8BkE,GAE9C,OACE,0BAAS7B,UAAWgC,EAApB,UACE,6BAAKjC,EAAM5B,QACX,4BAAI4B,EAAM3B,cCRZ6D,GAAO,EA4CIC,MA1Cf,WACE,IAAM7B,EAAWC,cACX6B,EAAWrB,aAAY,SAAAhD,GAAK,OAAIA,EAAM8B,GAAGlC,iBACzCmC,EAAOiB,aAAY,SAAAhD,GAAK,OAAIA,EAAM+B,QAClClC,EAAemD,aAAY,SAAAhD,GAAK,OAAIA,EAAM8B,GAAGjC,gBAmBnD,OAjBAyE,qBAAU,WACR/B,ECdA,uCAAO,WAAOA,GAAP,iBAAAgC,EAAA,6DAEGC,EAFH,+BAAAD,EAAA,MAEe,8BAAAA,EAAA,sEACQE,MACnB,6DAFW,WACTC,EADS,QAILC,GAJK,sBAKR,IAAIC,MAAM,oBALF,uBAOCF,EAASG,OAPV,cAOZC,EAPY,yBASXA,GATW,2CAFf,uEAcoBN,IAdpB,OAcGO,EAdH,OAeHxC,EAASb,EAAYb,YACjB,CACIH,MAAOqE,EAASrE,OAAS,GACzBC,cAAeoE,EAASpE,iBAlB7B,gDAuBHqE,OAAOC,MAAP,MACA1C,EACIhC,EAAUN,iBAAiB,CACzBE,OAAQ,QACRE,MAAO,QACPC,QAAS,+BA5BZ,yDAAP,yDDeA,CAACiC,IAEH+B,qBAAU,WAELH,EAEDA,GAAO,EAGNpC,EAAKnB,SACN2B,ECUsB,SAAAR,GACxB,8CAAQ,WAAOQ,GAAP,eAAAgC,EAAA,6DACJhC,EACIhC,EAAUN,iBAAiB,CACzBE,OAAQ,UACRE,MAAO,UACPC,QAAS,qBAIT4E,EATF,+BAAAX,EAAA,MASgB,sBAAAA,EAAA,sEAEpBE,MACG,4DACD,CACIU,OAAQ,MACTC,KAAMC,KAAKC,UACR,CACC5E,MAAOqB,EAAKrB,MACZC,cAAeoB,EAAKpB,kBATT,iBAcPgE,GAdO,sBAeZ,IAAIC,MAAM,kBAfE,2CAThB,uEA4BMM,IA5BN,OA6BA3C,EACIhC,EAAUN,iBAAiB,CACzBE,OAAQ,UACRE,MAAO,UACPC,QAAS,kBAjCf,gDAqCAiC,EACIhC,EAAUN,iBAAiB,CACzBE,OAAQ,QACRE,MAAO,QACPC,QAAS,4BAzCf,yDAAR,sDDXWiF,CAAaxD,MAGxB,CAACA,EAAKQ,IAGN,qCAEE1C,GACE,cAAC,EAAD,CACEM,OAAQN,EAAaM,OACrBE,MAAOR,EAAaQ,MACpBC,QAAST,EAAaS,UAI5B,eAAC,EAAD,WACG+D,GAAY,cAAC,EAAD,IACb,cAAC,EAAD,WExCNmB,IAASC,OACL,cAAC,IAAD,CAAU9D,MAAOA,EAAjB,SACI,cAAC,EAAD,MAGF+D,SAASC,eAAe,W","file":"static/js/main.103e952e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__3uinA\",\"details\":\"CartItem_details__1dK6K\",\"quantity\":\"CartItem_quantity__Q7Mox\",\"price\":\"CartItem_price__2jb5M\",\"itemprice\":\"CartItem_itemprice__2CSTo\",\"actions\":\"CartItem_actions__3d4J1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__cZZAf\",\"price\":\"ProductItem_price__3McbF\",\"actions\":\"ProductItem_actions__2HaOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3_7yt\",\"error\":\"Notification_error__6-Bzs\",\"success\":\"Notification_success__2b3lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__Q3oyS\",\"badge\":\"CartButton_badge__FtQmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__7Ngd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1NAXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__3T3DW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__2Ds9p\"};","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: {cartIsVisible: false, notification: null},\r\n    reducers: {\r\n        toggle(state){\r\n            state.cartIsVisible=!state.cartIsVisible;\r\n        },\r\n        showNotification(state,action){\r\n            state.notification = {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message,\r\n            };\r\n        }\r\n    }\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\nexport default uiSlice;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState:{\r\n        items: [],\r\n        totalQuantity: 0,\r\n        changed: false,\r\n\r\n    },\r\n    reducers: {\r\n        replaceCart(state,action){\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart(state,action){\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find((item) => item.id ===newItem.id);\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            }\r\n            else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state,action)\r\n        {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n\r\n            if(existingItem.quantity === 1)\r\n            {\r\n                state.items = state.items.filter(item => item.id != id);\r\n            }\r\n            else{\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;","import {configureStore} from '@reduxjs/toolkit';\r\nimport uiSlice from './ui-slice';\r\nimport cartSlice from './cart-slice'\r\n\r\nconst store = configureStore({\r\n    reducer: {ui: uiSlice.reducer, cart: cartSlice.reducer}\r\n});\r\n\r\nexport default store;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch()\n  const { title, quantity, total, price, id } = props.item;\n\n  const removeitemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const addItemHandler = () => {\n    dispatch(cartActions.addItemToCart(\n      {\n        id,\n        title,\n        price,\n      }\n    ))\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeitemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\n\nconst Cart = (props) => {\n\n  const cartItems = useSelector(state => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map( (item) => (\n            <CartItem\n            key={item.id}\n            item={{ \n              id: item.id,\n              title: item.name, \n              quantity: item.quantity, \n              total: item.totalPrice, \n              price: item.price\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from './CartButton.module.css';\nimport { uiActions } from '../../store/ui-slice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n\n  const cartQuantity = useSelector(state => state.cart.totalQuantity);\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n\n  }\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  \n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    dispatch(cartActions.addItemToCart(\n      {\n      id,\n      title,\n      price,\n      }\n      ))\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: 'p1',\n    price: 6,\n    title: 'atlas25',\n    description: 'AutoPilot is scary',\n  },\n  {\n    id: 'p2',\n    price: 6,\n    title: 'atlas26',\n    description: 'AutoPilot is !scary',\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((products) => (\n          <ProductItem\n          key={products.id}\n          id={products.id}\n          title={products.title}\n          price={products.price}\n          description={products.description}\n        />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Fragment, useEffect, useState} from 'react'\nimport { sendCartData,fetchCartData } from './store/cart-actions';\nimport Notification from './components/UI/Notification';\n\n//Global var, would only be reinitalized when the file is re rendered rather component\nlet init = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  \n  useEffect(()=>{\n    dispatch(fetchCartData())\n  },[dispatch])\n\n  useEffect(() => {\n   \n    if(init)\n    {\n      init = false;\n      return;\n    }\n    if(cart.changed){\n      dispatch(sendCartData(cart));\n    }\n    \n  },[cart,dispatch])\n\n  return (\n    <>\n    {\n      notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )\n    }\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  </>\n  );\n}\n\nexport default App;\n","import { cartActions } from './cart-slice';\r\nimport { uiActions } from './ui-slice'\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        \r\n        const fetchData = async () => {\r\n           const response = await fetch(\r\n               'https://reduxdemons-default-rtdb.firebaseio.com/cart.json');\r\n        \r\n        if(!response.ok){\r\n            throw new Error('Could not Fetch!');\r\n        }\r\n        const data = await response.json();\r\n\r\n        return data;\r\n    };\r\n    try{\r\n        const cartData = await fetchData();\r\n        dispatch(cartActions.replaceCart(\r\n            {\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity,\r\n            }\r\n        ));\r\n    ;}\r\n    catch(error){\r\n        window.alert(error);\r\n        dispatch(\r\n            uiActions.showNotification({\r\n              status: 'error',\r\n              title: 'Error',\r\n              message: 'Fetching Cart Data Failed',\r\n            })\r\n        )\r\n    }\r\n}\r\n}\r\n\r\nexport const sendCartData = cart => {\r\n    return  async (dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n              status: 'pending',\r\n              title: 'Sending',\r\n              message: 'Sending To Cart',\r\n            })\r\n          );\r\n\r\n        const sendRequest = async () => {\r\n        const response = await \r\n        fetch\r\n          ('https://reduxdemons-default-rtdb.firebaseio.com/cart.json',\r\n          {\r\n              method: 'PUT',\r\n             body: JSON.stringify(\r\n                {\r\n                 items: cart.items,\r\n                 totalQuantity: cart.totalQuantity,\r\n                }\r\n             ),\r\n          }\r\n            );\r\n        if(!response.ok){\r\n          throw new Error('Sending Failed');\r\n        }\r\n        }\r\n        try{\r\n            await sendRequest();\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'success',\r\n                  title: 'Success',\r\n                  message: 'Sent To Cart',\r\n                })\r\n              );\r\n        }catch(error){\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'error',\r\n                  title: 'Error',\r\n                  message: 'Sending To Cart Failed',\r\n                })\r\n              );\r\n        }\r\n\r\n        \r\n    };\r\n};","import ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store/index';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    \n    , document.getElementById('root'));\n"],"sourceRoot":""}